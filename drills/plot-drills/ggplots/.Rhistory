min(c(1,2,NA), na.rm = T)
vec
vec <- c(vec, NA)
vec
vec[vec > 0]
nrow[vec]
vec[vec != "NA"]
vec[vec != NA]
order(vec)
vec[order(vec)
]
vec[order(vec)]
order(vec)
vec <- c(0,3,2,6,4,7,5,2,1,1)
order(vec)
vec[order(vec)]
vec[-order(vec)]
vec[order(-vec)]
df <- rbind(one = vec, two = vec)
df
str(df)
df <- as.data.frame(df)
df
row.names(c(df, df))
row.names(df)
library(ggplot2)
  geom_line(aes(group = Subject), colour = "#3366ff")
library(nlme)#
ggplot(Oxboys, aes(Occasion, height)) + #
  geom_boxplot() + #
  geom_line(aes(group = Subject), colour = "#3366ff")
ggplot(diamonds, aes(color)) + #
  geom_bar(colour = cut)
ggplot(diamonds, aes(color)) + #
  geom_bar(aes(fill = cut))
ggplot2(diamonds, aes(carat)) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1)
ggplot(diamonds, aes(carat)) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1)
?dodge
?geom_bar
ggplot(diamonds, aes(color)) + #
  geom_bar(fill = cut)
  geom_bar(aes(group = cut))
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(group = cut))
  geom_bar(aes(fill = cut))
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut))
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = stack)
?position_stack
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "stack")
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "dodge")
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut)) +#
  poistion_dodge()
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut)) +#
  position_dodge()
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "fill")
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "jitter")
ggplot(diamonds, aes(carat)) + #
  xlim(0, 3) +#
  stat_bin(aes(ymax = ..count..), binwidth = 0.1, geom = "area")
ggplot(diamonds, aes(carat)) + #
  xlim(0, 3) +#
  stat_bin(aes(size = ..density..), binwidth = 0.1, geom = "point")
ggplot(diamonds, aes(carat)) + #
  xlim(0, 3) +#
  stat_bin(aes(size = ..density..), binwidth = 0.1, geom = "point", position = "identity")
ggplot(diamonds, aes(carat)) + #
  xlim(0, 3) +#
  stat_bin(aes(y = 1, fill = ..count..), binwidth = 0.1, #
    geom = "tile", position = "identity")
library(maps)#
library(ggplot2)
names <- read.csv("baby-names-data/baby-names.csv", header = T, stringsAsFactors = F)
ggplot(subset(names, name == "Christopher"), aes(year, percent)) +#
  geom_area(aes(group = name, fill = name))
ggplot(subset(names, name == "Christopher"), aes(year, percent)) +#
  geom_area()
ggplot(subset(names, name == "Christopher"), aes(year, percent)) +#
  geom_ribbon()
ggplot(subset(names, name == "Christopher"), aes(year, percent)) +#
  geom_ribbon(aes(ymin = 0, ymax = percent))
ggplot(subset(names, name == "Christopher"), aes(year, percent)) +#
  geom_ribbon(aes(ymin = 0, ymax = percent), group = sex)
head(names)
#
ggplot(subset(names, name == "Christopher"), aes(year, percent)) +#
  geom_ribbon(aes(ymin = 0, ymax = percent, group = sex), position = "stack")
ggplot(subset(names, name == "Christopher"), aes(year, percent)) +#
  geom_area(aes(group = c(name, sex)))
#
ggplot(subset(names, name == "Christopher"), aes(year, percent)) +#
  geom_area(aes(group = c(name, sex), fill = c(name, sex)))
ggplot(subset(names, name == "Christopher"), aes(year, percent)) +#
  geom_area(aes(group = sex, fill = sex))
class_names <- ddply(class_names, c("name", "year"), summarise, percent = sum(percent) / length(percent))
class <- c("Rakesh", "Luis", "Yanli", "Yen-yin", "Sarah", "Delma", "Chandra", "Elizabeth", "Kim-chi", "Amanda", "Thomas", "Caroline", "Da", "Christine", "Debra", "Christopher", "Justin", "Lisa", "Meng", "Emilian", "Lu", "Rachel", "Casper", "Jingjing", "Chengyong", "Ruo", "Zhongyu")#
#
class_names <- subset(names, name %in% class)
class_names <- subset(names, name %in% class)#
class_names <- ddply(class_names, c("name", "year"), summarise, percent = sum(percent) / length(percent))
dim(class_names)
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name))
class_names(name == "Lu")
class_names[name == "Lu",]
class_names[class_names$name == "Lu",]
ggplot(subset(class_names, names == "Lu"), aes(year, percent)) +#
  geom_area(aes(group = name, fill = name))
ggplot(subset(class_names, names == "Lu"), aes(year, percent)) +#
  geom_area()
class <- c("Rakesh", "Luis", "Yanli", "Yen-yin", "Sarah", "Delma", "Chandra", "Elizabeth", "Kim-chi", "Amanda", "Thomas", "Caroline", "Da", "Christine", "Debra", "Christopher", "Justin", "Lisa", "Meng", "Emilian","Rachel", "Casper", "Jingjing", "Chengyong", "Ruo", "Zhongyu")#
#
class_names <- subset(names, name %in% class)#
class_names <- ddply(class_names, c("name", "year"), summarise, percent = sum(percent) / length(percent))
ggplot(subset(class_names, names == "Lu"), aes(year, percent)) +#
  geom_area(aes(group = name, fill = name))
class <- c("Rakesh", "Luis", "Yanli", "Yen-yin", "Sarah", "Delma", "Chandra", "Elizabeth", "Kim-chi", "Amanda", "Thomas", "Caroline", "Da", "Christine", "Debra", "Christopher", "Justin", "Lisa", "Meng", "Emilian","Rachel", "Lu", "Casper", "Jingjing", "Chengyong", "Ruo", "Zhongyu")#
#
class_names <- subset(names, name %in% class)#
class_names <- ddply(class_names, c("name", "year"), summarise, percent = sum(percent) / length(percent))
ggplot(subset(class_names, name == "Lu"), aes(year, percent)) +#
  geom_area(aes(group = name, fill = name))
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name))
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(x, y, label = "Missing names did not appear in the top 1000 names")
)
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(label = "Missing names did not appear in the top 1000 names"))
?geom_text
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, label = "Missing names did not appear in the top 1000 names"), data = data.frame(year = 1880, percent = 0.10))
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, label = "Missing names did not appear in the top 1000 names"), data = data.frame(year = 1880, percent = 0.10), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, label = "Missing names did not appear in the top 1000 names"), data = data.frame(year = 1920, percent = 0.10), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, label = "*some names did not appear in the dataset"), data = data.frame(year = 1950, percent = 0.10), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, label = "*some names did not appear in the dataset"), data = data.frame(year = 1925, percent = 0.10), size = 4)
carats <- ddply(diamonds, "price", summarise, avg_carat = mean(carat, na.rm = T))
carats <- ddply(diamonds, "price", summarise, avg_carat = #
  mean(carat, na.rm = T), cut = cut)
head(carats)
head(diamonds)
ggplot(carats, aes(avg_carat, price)) +#
  geom_line(aes(colour = cut))
ggplot(carats, aes(price, avg_carat)) +#
  geom_line(aes(colour = cut))
ggplot(diamonds, aes(price, carat)) +#
  geom_smooth(aes(group = cut), method = "lm", se = F)
ggplot(diamonds, aes(price, carat)) +#
  geom_smooth(aes(group = cut, colour = cut), method = "lm", se = F)
ggplot(diamonds, aes(price, carat)) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F)
ggplot(diamonds, aes(price, carat)) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(aes(xmin = 3000, xmax = 6000, fill = "yellow")
)
ggplot(diamonds, aes(price, carat, ylim = c(0,3))) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(aes(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, fill = "yellow")
)
ggplot(diamonds, aes(price, carat, ylim = c(0,3))) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(aes(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3) fill = "yellow", alpha = 0.2)
ggplot(diamonds, aes(price, carat, ylim = c(0,3))) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(aes(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3) fill = alpha("yellow", 0.2))
ggplot(diamonds, aes(price, carat, ylim = c(0,3))) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, fill = alpha("yellow", 0.2))
ggplot(diamonds, aes(price, carat)) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, fill = alpha("yellow", 0.2))
ggplot(diamonds, aes(price, carat)) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, fill = alpha("yellow", 0.02))
ggplot(diamonds, aes(price, carat)) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, fill = alpha("yellow", 0.002))
ggplot(diamonds, aes(price, carat)) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, fill = alpha("yellow", 1/256))
ggplot(diamonds, aes(price, carat)) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, #
  fill = alpha("pink", 1/256)) +  #
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  coord_cartesian(ylim = c(0,3)) + #
  xlab("Average Carat Size")
ggplot(diamonds, aes(price, carat)) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, #
  fill = alpha("pink", 1/256)) +#
  coord_cartesian(ylim = c(0,3)) + #
  ylab("Average Carat Size")
ggplot(diamonds, aes(price, carat)) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, #
  fill = alpha("red", 1/256)) +#
  coord_cartesian(ylim = c(0,3)) + #
  ylab("Average Carat Size")
ggplot(diamonds, aes(price, carat)) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, #
  fill = alpha("red",  0.2)) +#
  coord_cartesian(ylim = c(0,3)) + #
  ylab("Average Carat Size")
ggplot(diamonds, aes(price, carat)) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3, #
  fill = alpha("red",  0.2)) +#
  scale_fill_manual(values = alpha("red", 0.2)) +#
  coord_cartesian(ylim = c(0,3)) + #
  ylab("Average Carat Size")
ggplot(diamonds, aes(price, carat)) +#
  geom_smooth(aes(colour = cut), method = "lm", se = F) +#
  geom_rect(xmin = 3000, xmax = 6000, ymin = 0, ymax = 3) +#
  scale_fill_manual(values = alpha("red", 0.2)) +#
  coord_cartesian(ylim = c(0,3)) + #
  ylab("Average Carat Size")
feb13 <- read.csv("delays/delays-feb-13-2007.csv")
head(feb13)
ggplot(feb13, aes(ntot, avgdelay)) + #
  geom_point()
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point()
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(aes(data = subset(feb13, cperc >= 0.6 & ntot >= 100), label = origin))
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(aes(data = subset(feb13, cperc >= 0.6 && ntot >= 100), label = origin))
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(aes(data = subset(feb13, cperc >= 0.6), label = origin))
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(aes(data = subset(feb13, cperc >= 0.6)), label = origin)
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6), aes(label = origin))
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6 & ntot > 100), aes(label = origin))
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6 & ntot > 100), #
  aes(label = origin), angle = 45)
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6 & ntot > 100), #
  aes(label = origin), angle = 45, hjust = 5)
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6 & ntot > 100), #
  aes(label = origin), angle = 45, hjust = -1)
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6 & ntot > 100), #
  aes(label = origin), angle = 45, hjust = -.5)
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6 & ntot > 100), #
  aes(label = origin), angle = 45, hjust = -.4)
ggplot(feb13, aes(ntot, cperc)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6 & ntot > 100), #
  aes(label = origin), angle = 45, hjust = -.3)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6 & ntot > 100), #
  aes(label = origin), angle = 45, hjust = -.3)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point() +#
  geom_text(data = subset(feb13, cperc > 0.6 & ntot > 100), #
  aes(label = origin), angle = 45, hjust = -.3) +#
  geom_smooth(method = "lm", se = T)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point() +#
  geom_text(data = subset(feb13, ncancel / ntot > 1), #
  aes(label = origin), angle = 45, hjust = -.3) +#
  geom_smooth(method = "lm", se = T)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point() +#
  geom_text(data = subset(feb13, ncancel / ntot < 1), #
  aes(label = origin), angle = 45, hjust = -.3) +#
  geom_smooth(method = "lm", se = T)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point() +#
  geom_text(data = subset(feb13, origin %in% c("IAH", "HOB")), #
  aes(label = origin), angle = 45, hjust = -.3) +#
  geom_smooth(method = "lm", se = T)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point() +#
  geom_point(data = subset(feb13, origin == "IAH"), size = 4, colour = alpha("red", 0.2)) +#
  geom_text(data = subset(feb13, origin == "IAH"), #
  aes(label = origin), angle = 45, hjust = -.3) +#
  geom_smooth(method = "lm", se = T)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point() +#
  geom_point(data = subset(feb13, origin == "IAH"), size = 8,#
  colour = alpha("red", 0.5)) +#
  geom_text(data = subset(feb13, origin == "IAH"), #
  aes(label = origin), angle = 45, hjust = -.3) +#
  geom_smooth(method = "lm", se = T)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point(data = subset(feb13, origin == "IAH"), size = 7,#
  colour = alpha("red", 0.5)) +#
  geom_point() +#
  geom_text(data = subset(feb13, origin == "IAH"), #
  aes(label = origin), hjust = -.3) +#
  geom_smooth(method = "lm", se = T)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point(data = subset(feb13, origin == "IAH"), size = 7,#
  colour = alpha("red", 0.5)) +#
  geom_point() +#
  geom_text(data = subset(feb13, origin == "IAH"), #
  aes(label = origin), hjust = -.5) +#
  geom_smooth(method = "lm", se = T)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point(data = subset(feb13, origin == "IAH"), size = 7,#
  colour = alpha("red", 0.5)) +#
  geom_point() +#
  geom_text(data = subset(feb13, origin == "IAH"), #
  aes(label = origin), hjust = -.5) +#
  geom_smooth(method = "lm", se = T) +#
  ylab("Number of flights cancelled") +#
  xlab("Total number of flights")
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point(data = subset(feb13, origin == "IAH"), size = 7,#
  colour = alpha("red", 0.5)) +#
  geom_point() +#
  geom_text(data = subset(feb13, origin == "IAH"), #
  aes(label = origin), hjust = -.5) +#
  geom_smooth(method = "lm", se = T) +#
  ylab("Number of flights cancelled") +#
  xlab("Total number of flights") + #
  main("Houston airport outperforms most")
ggplot(feb13, aes(ntot, ncancel), main = "Airport cancellations by size") + #
  geom_point(data = subset(feb13, origin == "IAH"), size = 7,#
  colour = alpha("red", 0.5)) +#
  geom_point() +#
  geom_text(data = subset(feb13, origin == "IAH"), #
  aes(label = origin), hjust = -.5) +#
  geom_smooth(method = "lm", se = T) +#
  ylab("Number of flights cancelled") +#
  xlab("Total number of flights")
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point(data = subset(feb13, origin == "IAH"), size = 7,#
  colour = alpha("red", 0.5)) +#
  geom_point() +#
  geom_text(data = subset(feb13, origin == "IAH"), #
  aes(label = origin), hjust = -.5) +#
  geom_smooth(method = "lm", se = T) +#
  labs(y = "Number of flights cancelled", #
    x = "Total number of flights", #
    main = "Airport cancellations by size")
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  facet_grid(cut ~ .)
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  geom_density() +#
  facet_grid(cut ~ .)
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  geom_density(data = diamonds) +#
  facet_grid(cut ~ .)
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  geom_vline(aes(x = mean(depth)) +#
  facet_grid(cut ~ .)
)
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  geom_vline(aes(x = mean(depth))) +#
  facet_grid(cut ~ .)
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  geom_vline(aes(x = mean(depth)), size = 2, colour = "blue") +#
  facet_grid(cut ~ .)
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  geom_vline(aes(xintercept = mean(depth)), size = 2, colour = "blue") +#
  facet_grid(cut ~ .)
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  geom_vline(aes(xintercept = mean(depth)), colour = "blue") +#
  facet_grid(cut ~ .)
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  geom_vline(aes(xintercept = mean()), colour = "blue") +#
  facet_grid(cut ~ .)
?facet_grid
ggplot(diamonds, aes(depth)) +#
  xlim(58, 68) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1) + #
  geom_vline(aes(xintercept = max(..density..), colour = "blue") +#
  facet_grid(cut ~ .)
)
ggplot(diamonds, aes(carat, price)) + #
  geom_smooth(method = "lm", colour = "blue") +#
  facet_grid(cut ~ clarity)
ggplot(diamonds, aes(carat, price)) + #
  geom_point() +#
  geom_smooth(method = "lm", colour = "blue") +#
  facet_grid(cut ~ clarity)
head(mpg)
ggplot(mpg, aes(year, hwy)) +#
  geom_line(aes(group = manufacturer))
ggplot(mpg, aes(year, hwy)) +#
  geom_point()
head(feb13)
ggplot(feb13, aes(lat, avgdelay)) +#
  geom_point()
ggplot(feb13, aes(lat, avgdelay)) +#
  geom_point() +#
  geom_boxplot()
?geom_boxplot
ggplot(feb13, aes(lat, avgdelay)) +#
  geom_point() +#
  geom_boxplot(aes(group = round(lat, 10, floor)))
?round
ggplot(feb13, aes(lat, avgdelay)) +#
  geom_point() +#
  geom_boxplot(aes(group = round(lat, -1)))
ggplot(diamonds, aes(price, carat)) +#
  geom_point()
ggplot(diamonds, aes(carat, price)) +#
  geom_point()
ggplot(diamonds, aes(carat, price)) +#
  geom_tile()
?geom_tile()
ggplot(diamonds, aes(carat, price)) +#
  geom_tile(stat = density)
ggplot(diamonds, aes(carat, price)) +#
  geom_tile(stat = "density")
ggplot(diamonds, aes(carat, price)) +#
  geom_tile(stat = "density2d")
ggplot(diamonds, aes(x = "", fill = clarity)) + #
  geom_bar(width = 1) + #
  coord_polar(theta = "y")
ggplot(diamonds, aes(x = "", fill = cut)) + #
  geom_bar(width = 1) + #
  coord_polar(theta = "y")
ggplot(diamonds, aes(x = "", fill = cut)) + #
  geom_bar(width = 1) + #
  coord_polar(theta = "x")
ggplot(diamonds, aes(x = "", fill = cut)) + #
  geom_bar(width = 1)
ggplot(diamonds, aes(x = cut)) + #
  geom_bar(fill = cut)
# 4. Diamonds pie chart#
ggplot(diamonds, aes(x = cut)) + #
  geom_bar(aes(fill = cut))
ggplot(diamonds, aes(x = cut)) + #
  geom_bar(aes(fill = cut)) + #
  coord_polar(theta = "x")
ggplot(diamonds, aes(x = "", fill = clarity)) + #
  geom_bar(width = 1) + #
  coord_polar(theta = "y")
library(nlme)#
ggplot(Oxboys, aes(age, height, group = Subject)) + #
  geom_line() + #
  geom_smooth(aes(group = 1), method = "lm", size = 2, se = F)
library(nlme)#
ggplot(Oxboys, aes(age, height, group = Subject)) + #
  geom_line() + #
  geom_smooth(aes(group = 1), method = "lm", size = 2, se = F) +#
  coord_polar(theta = "y")
ggplot(Oxboys, aes(age, height, group = Subject)) + #
  geom_line() + #
  geom_smooth(aes(group = 1), method = "lm", size = 2, se = F) +#
  coord_polar(theta = "x")
ggplot(diamonds, aes(x = "", fill = clarity)) + #
  geom_bar(width = 1) + #
  coord_polar(theta = "y")
ggplot(diamonds, aes(x = "", fill = cut)) + #
  geom_bar(width = 1) + #
  coord_polar(theta = "y")
# 11 boxplots with lines overlaid#
library(nlme)#
ggplot(Oxboys, aes(Occasion, height)) + #
  geom_boxplot() + #
  geom_line(aes(group = Subject), colour = "#3366ff")
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot()
ggplot(class_names, aes(as.factor(year), percent)) +#
  geom_boxplot()
# 4. names boxplots#
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(bin = 10)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(group = round_any(year, 10, floor))
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 10, floor)))
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor)))
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor), colour = name))
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_points(aes(colour = name))
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_point(aes(colour = name))
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_line(aes(colour = name))
ggplot(class_names, aes(year, percent)) +#
 # geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_line(aes(colour = name))
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, #
    label = "*some names did not appear in the dataset"), #
    data = data.frame(year = 1925, percent = 0.10), size = 4)
ggplot(class_names, aes(year, percent)) +#
 # geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_line(aes(colour = name))
ggplot(class_names, aes(year, percent)) +#
 # geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(aes(colour = name))
ggplot(class_names, aes(year, percent)) +#
 # geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(aes(colour = name), se = F)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(aes(colour = name), se = T)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth()
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 2)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
    geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), #
    data = data.frame(year = 1925, percent = 0.30), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
    geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), #
    data = data.frame(year = 1925, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
    geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1925, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1925, percent = 0.03), size = 4)#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1925, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1925, percent = 0.028), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1925, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1925, percent = 0.029), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1925, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1920, percent = 0.029), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1925, percent = 0.03), size = 5)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1915, percent = 0.029), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1925, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1919, percent = 0.029), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1925, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1918, percent = 0.029), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1925, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1920, percent = 0.029), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1925, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1910, percent = 0.029), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1915, percent = 0.03), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1906, percent = 0.029), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1911, percent = 0.03), size = 4)
ggplot(diamonds, aes(carat, price)) + #
  geom_point() +#
  geom_smooth(method = "lm", colour = "blue") +#
  facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x, y)) + #
  geom_point() +#
  geom_smooth(method = "lm", colour = "blue") +#
  facet_grid(cut ~ clarity)
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "dodge")
ggplot(diamonds, aes(clarity, price)) + #
  geom_bar(aes(fill = cut), position = "dodge")
head(diamonds)
ggplot(diamonds, aes(clarity, price)) + #
  geom_point()
ggplot(diamonds, aes(clarity, price)) + #
  geom_bar()
ggplot(diamonds, aes(clarity, price)) + #
  geom_bar(aes(x = clarity, y = price, fill = cut), postion = "dodge")
ggplot(diamonds, aes(clarity, mean(price))) + #
  geom_bar(aes(fill = cut), position = "dodge")
ggplot(diamonds, aes(clarity, price)) + #
  geom_bar(aes(fill = cut), stat = mean(price), position = "dodge")
ggplot(diamonds, aes(clarity, price)) + #
  geom_bar(aes(fill = cut), stat = mean(price), data = diamonds, position = "dodge")
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "dodge")
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut)) +#
  facet_grid( . ~ clarity)
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "dodge") +#
  facet_grid( . ~ clarity)
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "dodge") +#
  facet_grid(clarity ~ .)
ggplot(diamonds, aes(clarity)) + #
  geom_bar() +#
  facet_grid(cut ~ .)
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(colour = cut)) +#
  facet_grid(. ~ cut)
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut)) +#
  facet_grid(. ~ cut)
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut)) +#
  facet_grid(cut ~ .)
# 5a. #
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "dodge")
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut)) +#
  facet_grid(cut ~ .)
ggplot(feb13, aes(long, lat)) +#
  texmap + #
  geom_point(aes(size = ntot, colour = ndelay / ntot)) + #
  geom_text(aes(label = origin), #
    data = subset(feb13, ndelay >= 100), #
    size = 4, hjust = 1.5) +#
  scale_area("total flights", to = c(1, 8)) + #
  scale_colour_gradient("percent delayed")
texas <- map_data("state", "texas")#
texmap <- c(#
  geom_polygon(data = texas, colour = "grey70", fill = NA),#
  scale_x_continuous("", limits = c(-107, -93)),#
  scale_y_continuous("", limits = c(25.9, 37))#
)#
#
ggplot(feb13, aes(long, lat)) +#
  texmap + #
  geom_point(aes(size = ntot, colour = ndelay / ntot)) + #
  geom_text(aes(label = origin), #
    data = subset(feb13, ndelay >= 100), #
    size = 4, hjust = 1.5) +#
  scale_area("total flights", to = c(1, 8)) + #
  scale_colour_gradient("percent delayed")
?ggsave
ggsave(filename = "texmap1.png", width = 6, height = 4, dpi = 72)
ggplot(feb13, aes(ntot, ncancel)) + #
  geom_point(data = subset(feb13, origin == "IAH"), size = 7,#
  colour = alpha("red", 0.5)) +#
  geom_point() +#
  geom_text(data = subset(feb13, origin == "IAH"), #
  aes(label = origin), hjust = -.5) +#
  geom_smooth(method = "lm", se = T) +#
  labs(y = "Number of flights cancelled", #
    x = "Total number of flights")#
    #
ggsave(filename = "airports2.png", width = 6, height = 4, dpi = 72)
# 3. class names comparison#
names <- read.csv("baby-names-data/baby-names.csv", header = T, stringsAsFactors = F)#
#
class <- c("Rakesh", "Luis", "Yanli", "Yen-yin", "Sarah", "Delma", "Chandra", "Elizabeth", "Kim-chi", "Amanda", "Thomas", "Caroline", "Da", "Christine", "Debra", "Christopher", "Justin", "Lisa", "Meng", "Emilian","Rachel", "Lu", "Casper", "Jingjing", "Chengyong", "Ruo", "Zhongyu")#
#
class_names <- subset(names, name %in% class)#
class_names <- ddply(class_names, c("name", "year"), summarise, percent = sum(percent) / length(percent))#
#
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, #
    label = "*some names did not appear in the dataset"), #
    data = data.frame(year = 1925, percent = 0.10), size = 4)#
#
ggsave(filename = "classnames3.png", width = 6, height = 4, dpi = 72)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1906, percent = 0.029), size = 4) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1911, percent = 0.03), size = 4)#
#
ggsave(filename = "boxplots4.png", width = 6, height = 4, dpi = 72)
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "dodge")#
  #
ggsave(filename = "dodge5a.png", width = 6, height = 4, dpi = 72)
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut)) +#
  facet_grid(cut ~ .)#
  #
ggsave(filename = "facet5b.png", width = 6, height = 4, dpi = 72)
