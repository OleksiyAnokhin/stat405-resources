i <- 1
prod(1 / (pi * 1 - (sample - theta[i])^2))
theta <- seq(-100:100)
length(theta)
likelihood <- vector(length = 201)
prod(c(1,2,3))
sample <- rcauchy(3)
prod(1 / (pi * 1 - (sample - theta[i])^2))
for (i in 1:length(theta))#
 likelihood[i] <- prod(1 / (pi * 1 - (sample - theta[i])^2))
likelihood
sample
sample <- rcauchy(1000)#
theta <- seq(-100:100)#
likelihood <- vector(length = 201)#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1 / (pi * 1 - (sample - theta[i])^2))
qplot(theta, likelihood,  main = "Cauchy Likelihood Function", xlab = "sample ~ Cauchy(0,1)")
likelihood
head(sample)
summary(sample)
theta <- seq(-100:100)#
likelihood <- vector(length = 201)#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1 / (pi * (1 - (sample - theta[i])^2)))
qplot(theta, likelihood,  main = "Cauchy Likelihood Function", xlab = "sample ~ Cauchy(0,1)")
likelihood <- 1 / (pi * (1 - sample^2))
qplot(sample, likelihood,  main = "Cauchy Likelihood Function from randomly generated sample", xlab = "sample ~ Cauchy(0,1)", xlim = c(-10, 10), ylim = c(-10, 10))
likelihood <- vector(length = 201)#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1 / (pi * (1 - (sample - theta[i])^2)))
length(likelihood)
length(theta)
data <- cbind(theta, likelihood)
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta")
head(data)
sample <- rcauchy(100)
likelihood <- vector(length = 201)#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1 / (pi * (1 - (sample - theta[i])^2)))
data <- cbind(theta, likelihood)
head(data)
likelihood <- vector(length = 201)#
for (i in 1:length(theta))#
 likelihood[i] <- (1 / pi) * 1 / prod(1 - (sample - theta[i])^2)#
data <- cbind(theta, likelihood)
head(data)
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta")
summary(likelihood)
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(0, 1))
rcauchy??
?rcauchy
qplot(theta, likelihood, data = data, geom = "line", main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-0.00001, 0.00001))
qplot(theta, likelihood, data = data, geom = "line", main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-0.000000001, 0.0000000001))
qplot(theta, likelihood, data = data, geom = "line", main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e50, 1e50))
sample <- rcauchy(10)
likelihood <- vector(length = 201)#
for (i in 1:length(theta))#
 likelihood[i] <- (1 / pi) * 1 / prod(1 - (sample - theta[i])^2)#
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, data = data, geom = "line", main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e50, 1e50))
sample <- rcauchy(3)
likelihood <- vector(length = 201)#
for (i in 1:length(theta))#
 likelihood[i] <- (1 / pi ^ length(sample)) * 1 / prod(1 - (sample - theta[i])^2)#
data <- as.data.frame(cbind(theta, likelihood))
hed(data)
head(data)
qplot(theta, likelihood, data = data, geom = "line", main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e2, 1e2))
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e2, 1e2))
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e-2, 1e-2))
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e-5, 1e-5))
theta <- seq(-100:100)
theta <- seq(-100:100)#
for (i in 1:length(theta))#
 likelihood[i] <- (1 / pi ^ length(sample)) * 1 / prod(1 - (sample - theta[i])^2)
data <- as.data.frame(cbind(theta, likelihood))
head(data)
theta <- c(-100:100)
theta
for (i in 1:length(theta))#
 likelihood[i] <- (1 / pi ^ length(sample)) * 1 / prod(1 - (sample - theta[i])^2)#
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e-5, 1e-5))
sample <- rcauchy(100)
likelihood <- vector(length = 201)#
theta <- c(-100:100)#
for (i in 1:length(theta))#
 likelihood[i] <- (1 / pi ^ length(sample)) * 1 / prod(1 - (sample - theta[i])^2)#
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e-5, 1e-5))
sample <- rcauchy(1)#
likelihood <- vector(length = 201)#
theta <- c(-100:100)#
for (i in 1:length(theta))#
 likelihood[i] <- (1 / pi ^ length(sample)) * 1 / prod(1 - (sample - theta[i])^2)#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e-5, 1e-5))
sample
length(sample)
prod(sample)
sample <- rcauchy(1)#
likelihood <- vector(length = 201)#
theta <- c(-100:100)#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1/(pi*(1 - (sample - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e-5, 1e-5))
sample <- rcauchy(1)#
likelihood <- vector(length = 201)#
theta <- c(-100:100)#
for (i in 1:length(theta))#
 likelihood[i] <- 1/(pi*(1 - (sample - theta[i])^2))#
#
# likelihood[i] <- prod(1/(pi*(1 - (sample - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta", ylim = c(-1e-5, 1e-5))
head(data)
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta")
qplot(theta, likelihood, data = data, geom = "line", main = "Cauchy Likelihood Function", xlab = "theta")
sample <- rcauchy(100)#
likelihood <- vector(length = 201)#
theta <- c(-100:100)#
for (i in 1:length(theta))#
 likelihood[i] <- 1/(pi*(1 - (sample - theta[i])^2))#
#
# likelihood[i] <- prod(1/(pi*(1 - (sample - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, geom = "line", main = "Cauchy Likelihood Function", xlab = "theta")
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function", xlab = "theta")
sample <- rcauchy(100)#
likelihood <- vector(length = 201)#
theta <- c(-100:100)#
for (i in 1:length(theta))#
 likelihood[i] <- 1/(pi*(1 - (sample - theta[i])^2))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
#
sample <- rcauchy(100, 3)#
likelihood <- vector(length = 201)#
theta <- c(-100:100)#
for (i in 1:length(theta))#
 likelihood[i] <- 1/(pi*(1 - (sample - theta[i])^2))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
sample <- rcauchy(100, 3)#
likelihood <- vector(length = 201)#
theta <- c(-100:100)#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1/(pi*(1 - (sample - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
head(data)
data
theta <- c(-10:10,by = .001 )
length(theta)
theta
?seq
theta <- seq(-10,10,by = .001 )
length(theta)
sample <- rcauchy(100, 0)#
likelihood <- vector(length = 201)#
theta <- seq(-10,10,by = .001 )#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1/(pi*(1 - (sample - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
sample <- rcauchy(100, 0)#
likelihood <- vector(length = 201)#
theta <- seq(-5,5,by = .001 )#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1/(pi*(1 - (sample - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
test <- c(1,0,2)
product(test - 1)
prod(test - 1)
test - 1
sample <- rcauchy(100)#
theta <- seq(-2,2,by = .001 )#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1/(pi*(1 - (sample - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
qplot(theta, likelihood, geom = "line", data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
x <- rcauchy(1)
theta <- seq(-5,5,.0001)
x <- rcauchy(1)#
theta <- seq(-5,5,.0001)#
for (i in 1:length(theta))#
  likelihood[i] <- 1/(pi*(1 + (x - theta)^2)#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, geom = "line", data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
x <- rcauchy(1)#
theta <- seq(-5,5,.0001)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- 1/(pi*(1 + (x - theta)^2)#
data <- as.data.frame(cbind(theta, likelihood))
x <- rcauchy(1)#
theta <- seq(-5,5,.0001)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- 1/(pi*(1 + (x - theta)^2))#
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, geom = "line", data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
theta <- seq(-5,5,.001)
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- 1/(pi*(1 + (x - theta)^2))#
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, geom = "line", data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
dim(data)
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- 1/(pi*(1 + (x - theta[i])^2))#
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
sample <- rcauchy(100)#
theta <- seq(-2,2,by = .001 )#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
 likelihood[i] <- prod(1/(pi*(1 + (sample - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, geom = "line", data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
x <- rcauchy(100)#
theta <- seq(-2,2,.001)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- prod(1/(pi*(1 + (x - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
?help
x <- rcauchy(100)#
theta <- seq(-20,20,.01)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- prod(1/(pi*(1 + (x - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
x <- rcauchy(2)#
theta <- seq(-20,20,.01)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- prod(1/(pi*(1 + (x - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
x <- rcauchy(3)#
theta <- seq(-20,20,.01)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- prod(1/(pi*(1 + (x - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
x <- rcauchy(2)#
theta <- seq(-20,20,.01)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- prod(1/(pi*(1 + (x - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
theta <- seq(-100,100,.01)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- prod(1/(pi*(1 + (x - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
x <- rcauchy(4)#
theta <- seq(-20,20,.01)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- prod(1/(pi*(1 + (x - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
#
x <- rcauchy(4)#
theta <- seq(-20,20,.01)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- prod(1/(pi*(1 + (x - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
x <- rcauchy(3)
x <- rcauchy(3)#
theta <- seq(-20,20,.01)#
likelihood <- vector(length = length(theta))#
for (i in 1:length(theta))#
  likelihood[i] <- prod(1/(pi*(1 + (x - theta[i])^2)))#
data <- as.data.frame(cbind(theta, likelihood))#
#
qplot(theta, likelihood, data = data, main = "Cauchy Likelihood Function for mean parameter, sigma known", xlab = "theta")
n <- 10
c(0:(n-1))
c(0:n-1)
sum(c(0:n-1))
sum(c(0:n-1, NA))
sum(c(0:n-1, NA), na.rm = T)
c(0:n-1) -> vec
vec[.7 * length(vec)]
c(0:(n-1)) -> vec
vec[.7 * length(vec)]
order(c(1:9, NA))
order(c(1:9, NA. NA))
order(c(1:9, NA, NA))
vec[.7]
vec[1]
vec[1.7]
3 %% 2
3 % % 2
min(1,2,NA)
min(c(1,2,NA))
min(c(1,2,NA), na.rm = T)
vec
vec <- c(vec, NA)
vec
vec[vec > 0]
nrow[vec]
vec[vec != "NA"]
vec[vec != NA]
order(vec)
vec[order(vec)
]
vec[order(vec)]
order(vec)
vec <- c(0,3,2,6,4,7,5,2,1,1)
order(vec)
vec[order(vec)]
vec[-order(vec)]
vec[order(-vec)]
df <- rbind(one = vec, two = vec)
df
str(df)
df <- as.data.frame(df)
df
row.names(c(df, df))
row.names(df)
library(ggplot2)
  geom_line(aes(group = Subject), colour = "#3366ff")
library(nlme)#
ggplot(Oxboys, aes(Occasion, height)) + #
  geom_boxplot() + #
  geom_line(aes(group = Subject), colour = "#3366ff")
ggplot(diamonds, aes(color)) + #
  geom_bar(colour = cut)
ggplot(diamonds, aes(color)) + #
  geom_bar(aes(fill = cut))
ggplot2(diamonds, aes(carat)) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1)
ggplot(diamonds, aes(carat)) +#
  geom_histogram(aes(y = ..density..), binwidth = 0.1)
?dodge
?geom_bar
ggplot(diamonds, aes(color)) + #
  geom_bar(fill = cut)
  geom_bar(aes(group = cut))
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(group = cut))
  geom_bar(aes(fill = cut))
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut))
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = stack)
?position_stack
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "stack")
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "dodge")
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut)) +#
  poistion_dodge()
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut)) +#
  position_dodge()
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "fill")
ggplot(diamonds, aes(clarity)) + #
  geom_bar(aes(fill = cut), position = "jitter")
ggplot(diamonds, aes(carat)) + #
  xlim(0, 3) +#
  stat_bin(aes(ymax = ..count..), binwidth = 0.1, geom = "area")
ggplot(diamonds, aes(carat)) + #
  xlim(0, 3) +#
  stat_bin(aes(size = ..density..), binwidth = 0.1, geom = "point")
ggplot(diamonds, aes(carat)) + #
  xlim(0, 3) +#
  stat_bin(aes(size = ..density..), binwidth = 0.1, geom = "point", position = "identity")
ggplot(diamonds, aes(carat)) + #
  xlim(0, 3) +#
  stat_bin(aes(y = 1, fill = ..count..), binwidth = 0.1, #
    geom = "tile", position = "identity")
?round_any
kibrary(ggplot2)
library(ggplot2)
?round_any
?geom_bar
library(ggplot2)
ggplot(diamonds, aes(x = "", fill = clarity)) + geom_bar(width = 1) + coord_polar(theta = "y")
ggplot(p, aes(x = "", fill = state)) + geom_bar(width = 1) + coord_polar(theta = "y")
p <- read.csv("players.csv", header = T, stringsAsFactors = F)
p <- read.csv("players.csv", header = T, stringsAsFactors = F)
ggplot(p, aes(x = "", fill = state)) + geom_bar(width = 1) + coord_polar(theta = "y")
ggplot(diamonds, aes(x = "", fill = cut)) + geom_bar(width = 1) + coord_polar(theta = "y")
# delays data set#
feb13 <- read.csv("delays/delays-feb-13-2007.csv", #
  header = T, stringsAsFactors = F)
ggplot(feb13, aes(long, cperc)) +#
  geom_point(aes(colour = cperc, size = ntot)) + #
  geom_text(data = subset(feb13, cperc > 0.4 & long < -100),#
    aes(label = origin), hjust = 1.2, angle = -45, #
    colour = "orange")#
    #
     +#
  geom_smooth(method = "lm", aes(weight = ntot))
source("ggplots.r")
feb13 <- read.csv("delays/delays-feb-13-2007.csv")
# feb13 <- read.csv("delays/delays-feb-13-2007.csv")
b <- read.csv("batting.csv", header = T, stringsAsFactors = F)
yankees <- subset(b, team == "NYA")#
yankees <- transform(yankees, team = "Yankees")#
boston <- subset(b, team == "BOS")#
boston <- transform(boston, team = "Red Sox")#
yb <- rbind(yankees, boston)
yb_runs <- ddply(yb, c("year", "team"), summarise,#
  total_runs = sum(r, na.rm = T))
yb_homeruns <- ddply(yb, c("year", "team"), summarise,
yb_curse <- subset(yb, year > 1918 & year <= 2004)#
yb_curse <- transform(yb_curse, curse = "Curse years") #
#
yb_noncurse <- subset(yb, year <= 1918 | year > 2004)#
yb_noncurse <- transform(yb_noncurse, curse = "Non-curse Years") #
#
yb <- rbind(yb_curse, yb_noncurse)
yb_curse <- transform(yb_curse, curse = "Curse years")
yb_curse <- subset(yb, year > 1918 & year <= 2004)
 yb_homeruns <- ddply(yb, c("year", "team"), summarise,#
  total_hr = sum(hr, na.rm = T))
yb_curse <- subset(yb, year > 1918 & year <= 2004)#
yb_curse <- transform(yb_curse, curse = "Curse years") #
#
yb_noncurse <- subset(yb, year <= 1918 | year > 2004)#
yb_noncurse <- transform(yb_noncurse, curse = "Non-curse Years") #
#
yb <- rbind(yb_curse, yb_noncurse)
p <- read.csv("players.csv", header = T, stringsAsFactors = F)
head(b)
source("ggplots.r")
source("ggplots.r")
source("ggplots.r")
ggplot(b, aes(year, g)) +#
  stat_density2d(geom = "tile", aes(fill = ..density..), contour = F) +#
  scale_fill_gradient(low = "black", high = "white") #
  #
ggsave(filename = "battile6.png", width = 6, height = 4, dpi = 72)
yankees <- subset(b, team == "NYA")#
yankees <- transform(yankees, team = "Yankees")#
boston <- subset(b, team == "BOS")#
boston <- transform(boston, team = "Red Sox")#
yb <- rbind(yankees, boston)#
#
yb_runs <- ddply(yb, c("year", "team"), summarise,#
  total_runs = sum(r, na.rm = T)) #
#
ggplot(yb_runs, aes(year, total_runs)) +#
  geom_smooth(aes(colour = team)) +#
  scale_colour_manual(value = c("red", "blue")) +#
  geom_vline(aes(xintercept = c(1918, 2004))) +#
  geom_text(aes(x,y, label = "Curse Begins"), #
    data = data.frame(x = 1917, y = 400), size = 3, hjust = 0,#
    vjust = 0, angle = 90) +#
  geom_text(aes(x,y, label = "Curse Ends"), #
    data = data.frame(x = 2003, y = 400), size = 3, hjust = 0, #
    vjust = 0, angle = 90)#
  #
ggsave(filename = "hrline7.png", width = 6, height = 4, dpi = 72)
yb_homeruns <- ddply(yb, c("year", "team"), summarise,#
  total_hr = sum(hr, na.rm = T)) #
#
#
ggplot(yb_homeruns, aes(year, total_hr)) +#
  geom_bar(aes(fill = team), stat = "identity", position = "dodge") + #
  scale_fill_manual(value = alpha(c("red", "blue"), 0.4)) +#
  geom_smooth(aes(colour = team)) +#
  scale_colour_manual(value = c("red", "blue"))  #
  #
ggsave(filename = "hrbars8.png", width = 6, height = 4, dpi = 72)
ggplot(yb_homeruns, aes(year, total_hr)) +#
  geom_area(aes(fill = team), position = "identity") +#
  scale_fill_manual(value = alpha(c("red", "blue"), 0.4)) +#
    geom_vline(aes(xintercept = 1918)) +#
  geom_text(aes(x,y, label = "Curse Begins"), #
    data = data.frame(x = 1919, y = -10), size = 3, hjust = 0,#
    vjust = 0)#
    #
ggsave(filename = "hrarea9.png", width = 6, height = 4, dpi = 72)
yb_curse <- subset(yb, year > 1918 & year <= 2004)#
yb_curse <- transform(yb_curse, curse = "Curse years") #
#
yb_noncurse <- subset(yb, year <= 1918 | year > 2004)#
yb_noncurse <- transform(yb_noncurse, curse = "Non-curse Years") #
#
yb <- rbind(yb_curse, yb_noncurse)#
#
ggplot(yb, aes(team, hr / r)) +#
  geom_boxplot() +#
  facet_grid( . ~ curse) #
  #
ggsave(filename = "hrcurse10.png", width = 6, height = 4, dpi = 72)
world_map <- map_data("world")#
names(world_map)[5] <- "country"#
#
p_country <- ddply(p, "country", summarise, total = length(country))#
#
p_map <- merge(p_country, world_map, by = "country", all = T)#
p_map <- p_map[order(p_map$order), ]#
#
ggplot(p_map, aes(long, lat)) +#
  geom_polygon(aes(group = group, fill = log(total)), colour = "grey60", size = .3) +#
  ylim(-55, 85)#
  #
ggsave(filename = "playermap11.png", width = 6, height = 4, dpi = 72)
bp <- merge(b, p, by = "id")#
bp_country <- ddply(bp, "country", summarise, total = length(country))#
bp_country <- bp_country[order(-bp_country$total), ]#
bp_10 <- subset(bp, country %in% bp_country[2:11, 1])#
#
#
ggplot(bp_10, aes(year)) +#
  geom_area(aes(y = ..count.., fill = country), stat = "bin", binwidth = 10, position = "stack") + #
  opts(title = "10 most represented foreign countries in combined dataset") +#
  xlab("year (bin = 10 years)") #
  #
ggsave(filename = "statefill12.png", width = 6, height = 4, dpi = 72)
bp_trimmed <- subset(bp, bats != "")#
ggplot(bp_trimmed, aes(throws)) +#
  geom_bar() + #
  facet_grid (. ~ bats) +#
  opts(title = "Hand preference by batting preference")#
  #
ggsave(filename = "hand13.png", width = 6, height = 4, dpi = 72)
ggplot(bp, aes(height, so)) +#
  geom_jitter(position = position_jitter(width = 5), alpha = 0.05) +#
  xlim(60, 85)#
  #
ggsave(filename = "soheight14.png", width = 6, height = 4, dpi = 72)
ggplot(subset(bp, hr > 60), aes(weight, hr)) +#
  geom_point() +#
  geom_smooth(method = "lm", se = F) +#
  geom_text(aes(label = paste(first, last, sep = " ")), hjust = -0.1) +#
  xlim(203, 233) +#
  opts(title = "Weight vs. performance among record holders")#
  #
ggsave(filename = "hrweight15.png", width = 6, height = 4, dpi = 72)
lower48 <- subset(feb13, long > -130)#
lower48 <- subset(lower48, lat > 20)#
#
ggplot(subset(lower48, ntot >= 100), aes(long, lat)) +#
  borders("state") +#
  geom_point(aes(size = ndelay, colour = log(avgdelay)))#
  #
ggsave(filename = "airmap16.png", width = 6, height = 4, dpi = 72)
ggplot(feb13, aes(long, cperc)) +#
  geom_point(aes(colour = cperc, size = ntot)) + #
  geom_text(data = subset(feb13, cperc > 0.4 & long < -100),#
    aes(label = origin), hjust = 1.2, angle = -45, #
    colour = "orange")#
#
ggsave(filename = "longdelay17.png", width = 6, height = 4, dpi = 72)
ggplot(feb13, aes(long, ntot)) +#
  geom_area(aes(y = ..density..), stat = "density", alpha = 0.5) +#
  geom_vline(xintercept = c(-118, -87)) +#
  geom_text(aes(x,y, label = "Los Angeles"), #
    data = data.frame(x = - 119, y = 0), size = 4, hjust = 0,#
    vjust = 0, angle = 90) +#
  geom_text(aes(x,y, label = "Chicago"), #
    data = data.frame(x = -88, y = 0), size = 4, hjust = 0, #
    vjust = 0, angle = 90)#
    #
ggsave(filename = "longtot18.png", width = 6, height = 4, dpi = 72)
main <- subset(feb13, ntot > 400)#
#
ggplot(main, aes(origin, ntot)) +#
  geom_bar(aes(fill = cperc)) +#
  opts(axis.text.x = theme_text(angle = 90, hjust = 1))#
  #
ggsave(filename = "topairports19.png", width = 6, height = 4, dpi = 72)
feb13 <- read.csv("delays/delays-feb-13-2007.csv", header = T, stringsAsFactors = F)
feb13 <- read.csv("delays/delays-feb-13-2007.csv", header = T, stringsAsFactors = F)
main <- subset(feb13, ntot > 400)#
#
ggplot(main, aes(origin, ntot)) +#
  geom_bar(aes(fill = cperc)) +#
  opts(axis.text.x = theme_text(angle = 90, hjust = 1))#
  #
ggsave(filename = "topairports19.png", width = 6, height = 4, dpi = 72)
ggplot(diamonds, aes(x = "", fill = cut)) + geom_bar(width = 1) + coord_polar(theta = "y")  #
#
ggsave(filename = "pie20.png", width = 6, height = 4, dpi = 72)
class <- c("Rakesh", "Luis", "Yanli", "Yen-yin", "Sarah", "Delma", "Chandra", "Elizabeth", "Kim-chi", "Amanda", "Thomas", "Caroline", "Da", "Christine", "Debra", "Christopher", "Justin", "Lisa", "Meng", "Emilian","Rachel", "Lu", "Casper", "Jingjing", "Chengyong", "Ruo", "Zhongyu")#
#
class_names <- subset(names, name %in% class)#
class_names <- ddply(class_names, c("name", "year"), summarise, percent = sum(percent) / length(percent))#
#
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, #
    label = "*some names did not appear in the dataset"), #
    data = data.frame(year = 1925, percent = 0.10), size = 4)
head(names)
names <- read.csv("baby-names-data/baby-names.csv", header = T, stringsAsFactors = F)
class <- c("Rakesh", "Luis", "Yanli", "Yen-yin", "Sarah", "Delma", "Chandra", "Elizabeth", "Kim-chi", "Amanda", "Thomas", "Caroline", "Da", "Christine", "Debra", "Christopher", "Justin", "Lisa", "Meng", "Emilian","Rachel", "Lu", "Casper", "Jingjing", "Chengyong", "Ruo", "Zhongyu")#
#
class_names <- subset(names, name %in% class)#
class_names <- ddply(class_names, c("name", "year"), summarise, percent = sum(percent) / length(percent))#
#
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, #
    label = "*some names did not appear in the dataset"), #
    data = data.frame(year = 1925, percent = 0.10), size = 4)
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, #
    label = "*some names did not appear in the dataset"), #
    data = data.frame(year = 1925, percent = 0.10), size = 3)
ggplot(class_names, aes(year, percent)) +#
  geom_boxplot(aes(group = round_any(year, 5, floor))) +#
  geom_smooth(se = F, size = 1) +#
  geom_text(aes(year, percent, #
    label = "*blue line is a smoothed mean"), colour = "blue",#
    data = data.frame(year = 1906, percent = 0.029), size = 3) +#
  geom_text(aes(year, percent, #
    label = "Popularity of class names as a group"), #
    data = data.frame(year = 1911, percent = 0.03), size = 3)#
#
ggsave(filename = "boxplots4.png", width = 6, height = 4, dpi = 72)
ggsave(filename = "boxplots4.png", width = 6, height = 4, dpi = 72)
ggplot(class_names, aes(year, percent)) +#
  geom_area(aes(group = name, fill = name)) +#
  geom_text(aes(year, percent, #
    label = "*some names did not appear in the dataset"), #
    data = data.frame(year = 1925, percent = 0.10), size = 3)
ggsave(filename = "classnames3.png", width = 6, height = 4, dpi = 72)
